{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/yonko/Development/code/phase2/code-challenge/phase-2-hooks-code-challenge-bank-of-flatiron-Yonkothe5th/src/components/AddTransactionForm.js\",\n    _s = $RefreshSig$();\n\n// import React from \"react\";\n// function AddTransactionForm() {\n//   return (\n//     <div className=\"ui segment\">\n//       <form className=\"ui form\">\n//         <div className=\"inline fields\">\n//           <input type=\"date\" name=\"date\" />\n//           <input type=\"text\" name=\"description\" placeholder=\"Description\" />\n//           <input type=\"text\" name=\"category\" placeholder=\"Category\" />\n//           <input type=\"number\" name=\"amount\" placeholder=\"Amount\" step=\"0.01\" />\n//         </div>\n//         <button className=\"ui button\" type=\"submit\">\n//           Add Transaction\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n// export default AddTransactionForm;\nimport React, { useState } from \"react\";\n\nfunction AddTransactionForm({\n  transactions,\n  addTransaction\n}) {\n  _s();\n\n  const [formData, setFormData] = useState({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: 0\n  });\n\n  const handleInputChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newTransaction = {\n      date: formData.date,\n      description: formData.description,\n      category: formData.category,\n      amount: parseFloat(formData.amount)\n    }; // Call the addTransaction function passed as a prop\n\n    addTransaction(newTransaction);\n    setFormData({\n      date: \"\",\n      description: \"\",\n      category: \"\",\n      amount: 0\n    }); // Post the new transaction to the backend API for persistence\n\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newTransaction)\n    }).then(response => response.json()).then(data => console.log(\"Transaction posted successfully:\", data)).catch(error => console.error(\"Error posting transaction:\", error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui segment\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ui form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          value: formData.date,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description\",\n          value: formData.description,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"category\",\n          placeholder: \"Category\",\n          value: formData.category,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"amount\",\n          placeholder: \"Amount\",\n          step: \"0.01\",\n          value: formData.amount,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        type: \"submit\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTransactionForm, \"U+TQTZOVffKqrJ7Qfsm0LJtE7+Y=\");\n\n_c = AddTransactionForm;\nexport default AddTransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransactionForm\");","map":{"version":3,"sources":["/Users/yonko/Development/code/phase2/code-challenge/phase-2-hooks-code-challenge-bank-of-flatiron-Yonkothe5th/src/components/AddTransactionForm.js"],"names":["React","useState","AddTransactionForm","transactions","addTransaction","formData","setFormData","date","description","category","amount","handleInputChange","e","target","name","value","handleSubmit","preventDefault","newTransaction","parseFloat","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","error"],"mappings":"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","sourcesContent":["// import React from \"react\";\n\n// function AddTransactionForm() {\n//   return (\n//     <div className=\"ui segment\">\n//       <form className=\"ui form\">\n//         <div className=\"inline fields\">\n//           <input type=\"date\" name=\"date\" />\n//           <input type=\"text\" name=\"description\" placeholder=\"Description\" />\n//           <input type=\"text\" name=\"category\" placeholder=\"Category\" />\n//           <input type=\"number\" name=\"amount\" placeholder=\"Amount\" step=\"0.01\" />\n//         </div>\n//         <button className=\"ui button\" type=\"submit\">\n//           Add Transaction\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default AddTransactionForm;\n\n\nimport React, { useState } from \"react\";\n\nfunction AddTransactionForm({ transactions, addTransaction }) {\n  const [formData, setFormData] = useState({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: 0,\n  });\n\n  const handleInputChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const newTransaction = {\n      date: formData.date,\n      description: formData.description,\n      category: formData.category,\n      amount: parseFloat(formData.amount),\n    };\n\n    // Call the addTransaction function passed as a prop\n    addTransaction(newTransaction);\n\n    setFormData({\n      date: \"\",\n      description: \"\",\n      category: \"\",\n      amount: 0,\n    });\n\n    // Post the new transaction to the backend API for persistence\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newTransaction),\n    })\n      .then((response) => response.json())\n      .then((data) => console.log(\"Transaction posted successfully:\", data))\n      .catch((error) => console.error(\"Error posting transaction:\", error));\n  };\n\n  return (\n    <div className=\"ui segment\">\n      <form className=\"ui form\" onSubmit={handleSubmit}>\n        <div className=\"inline fields\">\n          <input\n            type=\"date\"\n            name=\"date\"\n            value={formData.date}\n            onChange={handleInputChange}\n          />\n          <input\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"Description\"\n            value={formData.description}\n            onChange={handleInputChange}\n          />\n          <input\n            type=\"text\"\n            name=\"category\"\n            placeholder=\"Category\"\n            value={formData.category}\n            onChange={handleInputChange}\n          />\n          <input\n            type=\"number\"\n            name=\"amount\"\n            placeholder=\"Amount\"\n            step=\"0.01\"\n            value={formData.amount}\n            onChange={handleInputChange}\n          />\n        </div>\n        <button className=\"ui button\" type=\"submit\">\n          Add Transaction\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;"]},"metadata":{},"sourceType":"module"}